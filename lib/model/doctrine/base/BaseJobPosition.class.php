<?php

/**
 * BaseJobPosition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property enum $department
 * @property clob $description
 * @property clob $qualifications
 * @property clob $tech_experience
 * @property clob $additional_areas
 * @property clob $required_skills
 * @property clob $time_reqs
 * @property boolean $is_active
 * @property Doctrine_Collection $JobApplication
 * 
 * @method string              getName()             Returns the current record's "name" value
 * @method enum                getDepartment()       Returns the current record's "department" value
 * @method clob                getDescription()      Returns the current record's "description" value
 * @method clob                getQualifications()   Returns the current record's "qualifications" value
 * @method clob                getTechExperience()   Returns the current record's "tech_experience" value
 * @method clob                getAdditionalAreas()  Returns the current record's "additional_areas" value
 * @method clob                getRequiredSkills()   Returns the current record's "required_skills" value
 * @method clob                getTimeReqs()         Returns the current record's "time_reqs" value
 * @method boolean             getIsActive()         Returns the current record's "is_active" value
 * @method Doctrine_Collection getJobApplication()   Returns the current record's "JobApplication" collection
 * @method JobPosition         setName()             Sets the current record's "name" value
 * @method JobPosition         setDepartment()       Sets the current record's "department" value
 * @method JobPosition         setDescription()      Sets the current record's "description" value
 * @method JobPosition         setQualifications()   Sets the current record's "qualifications" value
 * @method JobPosition         setTechExperience()   Sets the current record's "tech_experience" value
 * @method JobPosition         setAdditionalAreas()  Sets the current record's "additional_areas" value
 * @method JobPosition         setRequiredSkills()   Sets the current record's "required_skills" value
 * @method JobPosition         setTimeReqs()         Sets the current record's "time_reqs" value
 * @method JobPosition         setIsActive()         Sets the current record's "is_active" value
 * @method JobPosition         setJobApplication()   Sets the current record's "JobApplication" collection
 * 
 * @package    Funny Garbgage
 * @subpackage model
 * @author     Anthony Bovasso
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseJobPosition extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('job_position');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('department', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Design',
              1 => 'Project Management',
              2 => 'Technology',
              3 => 'User Experience Design/IA',
             ),
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             'extra' => 'markdown',
             ));
        $this->hasColumn('qualifications', 'clob', null, array(
             'type' => 'clob',
             'extra' => 'markdown',
             ));
        $this->hasColumn('tech_experience', 'clob', null, array(
             'type' => 'clob',
             'extra' => 'markdown',
             ));
        $this->hasColumn('additional_areas', 'clob', null, array(
             'type' => 'clob',
             'extra' => 'markdown',
             ));
        $this->hasColumn('required_skills', 'clob', null, array(
             'type' => 'clob',
             'extra' => 'markdown',
             ));
        $this->hasColumn('time_reqs', 'clob', null, array(
             'type' => 'clob',
             'extra' => 'markdown',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('JobApplication', array(
             'local' => 'id',
             'foreign' => 'job_position_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}