<?php

/**
 * BaseProject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property integer $category_id
 * @property string $extract
 * @property string $overview
 * @property string $launch_date
 * @property string $url
 * @property string $awards
 * @property integer $screenshot
 * @property integer $thumbnail
 * @property integer $client
 * @property integer $client_2
 * @property integer $client_3
 * @property boolean $is_featured
 * @property boolean $is_active
 * @property DmMedia $Screenshot
 * @property DmMedia $Thumbnail
 * @property Client $Client
 * @property Client $Client2
 * @property Client $Client3
 * @property Category $Category
 * @property Doctrine_Collection $ProjectVideo
 * 
 * @method string              getTitle()        Returns the current record's "title" value
 * @method integer             getCategoryId()   Returns the current record's "category_id" value
 * @method string              getExtract()      Returns the current record's "extract" value
 * @method string              getOverview()     Returns the current record's "overview" value
 * @method string              getLaunchDate()   Returns the current record's "launch_date" value
 * @method string              getUrl()          Returns the current record's "url" value
 * @method string              getAwards()       Returns the current record's "awards" value
 * @method integer             getScreenshot()   Returns the current record's "screenshot" value
 * @method integer             getThumbnail()    Returns the current record's "thumbnail" value
 * @method integer             getClient()       Returns the current record's "client" value
 * @method integer             getClient2()      Returns the current record's "client_2" value
 * @method integer             getClient3()      Returns the current record's "client_3" value
 * @method boolean             getIsFeatured()   Returns the current record's "is_featured" value
 * @method boolean             getIsActive()     Returns the current record's "is_active" value
 * @method DmMedia             getScreenshot()   Returns the current record's "Screenshot" value
 * @method DmMedia             getThumbnail()    Returns the current record's "Thumbnail" value
 * @method Client              getClient()       Returns the current record's "Client" value
 * @method Client              getClient2()      Returns the current record's "Client2" value
 * @method Client              getClient3()      Returns the current record's "Client3" value
 * @method Category            getCategory()     Returns the current record's "Category" value
 * @method Doctrine_Collection getProjectVideo() Returns the current record's "ProjectVideo" collection
 * @method Project             setTitle()        Sets the current record's "title" value
 * @method Project             setCategoryId()   Sets the current record's "category_id" value
 * @method Project             setExtract()      Sets the current record's "extract" value
 * @method Project             setOverview()     Sets the current record's "overview" value
 * @method Project             setLaunchDate()   Sets the current record's "launch_date" value
 * @method Project             setUrl()          Sets the current record's "url" value
 * @method Project             setAwards()       Sets the current record's "awards" value
 * @method Project             setScreenshot()   Sets the current record's "screenshot" value
 * @method Project             setThumbnail()    Sets the current record's "thumbnail" value
 * @method Project             setClient()       Sets the current record's "client" value
 * @method Project             setClient2()      Sets the current record's "client_2" value
 * @method Project             setClient3()      Sets the current record's "client_3" value
 * @method Project             setIsFeatured()   Sets the current record's "is_featured" value
 * @method Project             setIsActive()     Sets the current record's "is_active" value
 * @method Project             setScreenshot()   Sets the current record's "Screenshot" value
 * @method Project             setThumbnail()    Sets the current record's "Thumbnail" value
 * @method Project             setClient()       Sets the current record's "Client" value
 * @method Project             setClient2()      Sets the current record's "Client2" value
 * @method Project             setClient3()      Sets the current record's "Client3" value
 * @method Project             setCategory()     Sets the current record's "Category" value
 * @method Project             setProjectVideo() Sets the current record's "ProjectVideo" collection
 * 
 * @package    Funny Garbgage
 * @subpackage model
 * @author     Anthony Bovasso
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProject extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project');
        $this->hasColumn('title', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 120,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('extract', 'string', 300, array(
             'type' => 'string',
             'notnull' => false,
             'extra' => 'markdown',
             'length' => 300,
             ));
        $this->hasColumn('overview', 'string', 2000, array(
             'type' => 'string',
             'notnull' => true,
             'extra' => 'markdown',
             'length' => 2000,
             ));
        $this->hasColumn('launch_date', 'string', 60, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 60,
             ));
        $this->hasColumn('url', 'string', 200, array(
             'type' => 'string',
             'extra' => 'link',
             'length' => 200,
             ));
        $this->hasColumn('awards', 'string', 500, array(
             'type' => 'string',
             'extra' => 'markdown',
             'length' => 500,
             ));
        $this->hasColumn('screenshot', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('thumbnail', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('client', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('client_2', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('client_3', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('is_featured', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             'default' => false,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DmMedia as Screenshot', array(
             'local' => 'screenshot',
             'foreign' => 'id'));

        $this->hasOne('DmMedia as Thumbnail', array(
             'local' => 'thumbnail',
             'foreign' => 'id'));

        $this->hasOne('Client', array(
             'local' => 'client',
             'foreign' => 'id'));

        $this->hasOne('Client as Client2', array(
             'local' => 'client_2',
             'foreign' => 'id'));

        $this->hasOne('Client as Client3', array(
             'local' => 'client_3',
             'foreign' => 'id'));

        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasMany('ProjectVideo', array(
             'local' => 'id',
             'foreign' => 'project'));

        $dmsortable0 = new Doctrine_Template_DmSortable();
        $dmtaggable0 = new Doctrine_Template_DmTaggable();
        $dmgallery0 = new Doctrine_Template_DmGallery(array(
             'form_class' => 'ProjectDmMediaForm',
             ));
        $this->actAs($dmsortable0);
        $this->actAs($dmtaggable0);
        $this->actAs($dmgallery0);
    }
}